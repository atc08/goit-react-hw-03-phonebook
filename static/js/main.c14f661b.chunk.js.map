{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["INITIAL_STATE","id","name","number","ContactForm","state","handleInputsChange","target","value","setState","handleSubmit","e","preventDefault","onAdd","props","validatedForm","uuidv4","resetForm","onCheckUniqueContact","alert","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","ondeleteContact","className","s","ContactListItemText","onClick","ContactList","contacts","length","map","contact","Filter","filter","onchangeFilter","App","handleAddContact","addedContact","handleCheckUniqueContact","isExistContact","find","handleDeleteContact","contactId","handleChangeFilter","currentTarget","getFilteredContact","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","filterContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c14f661b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst INITIAL_STATE = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleInputsChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedForm = this.validatedForm();\n    if (!isValidatedForm) return;\n    onAdd({ id: uuidv4(), name, number });\n    this.resetForm();\n  };\n\n  validatedForm = () => {\n    const { name, number } = this.state;\n    const { onCheckUniqueContact } = this.props;\n    if (!name || !number) {\n      alert('Please enter name and phone number');\n      return false;\n    }\n    return onCheckUniqueContact(number);\n  };\n\n  resetForm = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleInputsChange}\n          ></input>\n        </label>\n        <label>\n          Phone number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"Enter phone number\"\n            onChange={this.handleInputsChange}\n          ></input>\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, ondeleteContact }) => {\n  return (\n    <li className={s.ContactListItem}>\n      <p className={s.ContactListItemText}>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => ondeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\nconst ContactList = ({ contacts, ondeleteContact }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.ContactList}>\n      {contacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          {...contact}\n          ondeleteContact={ondeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactListItem.propTypes = {\n  ondeleteContact: PropTypes.func,\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  ondeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, onchangeFilter }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={onchangeFilter}\n        placeholder=\"Enter name for search\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onchangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleAddContact = addedContact => {\n    this.setState(({ contacts }) => ({\n      contacts: [addedContact, ...contacts],\n    }));\n  };\n\n  handleCheckUniqueContact = number => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(\n      contact => contact.number === number,\n    );\n    isExistContact && alert('You have such contact');\n    return !isExistContact;\n  };\n\n  handleDeleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleChangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filterContacts = this.getFilteredContact();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUniqueContact={this.handleCheckUniqueContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} onchangeFilter={this.handleChangeFilter} />\n        <ContactList\n          contacts={filterContacts}\n          ondeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__7bjtT\",\"ContactListItem\":\"ContactList_ContactListItem__2ojyR\",\"ContactListItemText\":\"ContactList_ContactListItemText__2_KA7\"};"],"sourceRoot":""}